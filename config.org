#+TITLE:    Percs - Emacs configuration
#+AUTHOR:   Mora Unie Youer
#+EMAIL:    mora_unie_youer@riseup.net
#+DATE:     2022-03-03
#+PROPERTY: header-args+ :tangle "~/.emacs.d/config.el" :comments link
#+ARCHIVE:  ::* Archived

* This is me :3
#+begin_src emacs-lisp
	(setq user-full-name    "Mora Unie Youer"
				user-mail-address "mora_unie_youer@riseup.net")
#+end_src

* Initialization
** early-init.el
Early init file. Used to configure something before =init.el= is loaded.

Deferring garbage collection.
#+begin_src emacs-lisp :tangle "~/.emacs.d/early-init.el"
	(setq gc-cons-threshold most-positive-fixnum
				gc-cons-percentage 0.6)
#+end_src

Preventing Emacs from early package initialization.
#+begin_src emacs-lisp :tangle "~/.emacs.d/early-init.el"
	(setq package-enable-at-startup nil
				package-quickstart nil)
#+end_src

Disable UI elements.
#+begin_src emacs-lisp :tangle "~/.emacs.d/early-init.el"
	(menu-bar-mode -1)
	(tool-bar-mode -1)
	(scroll-bar-mode -1)
	(setq inhibit-splash-screen t
				use-file-dialog nil)
#+end_src

Preventing unwanted runtime builds when native compilation enabled.
#+begin_src emacs-lisp :tangle "~/.emacs.d/early-init.el"
	(setq comp-deferred-compilation nil)
#+end_src

** init.el
Init file. Used to load Percs configuration.

Setting Percs user directory.
#+begin_src emacs-lisp :tangle "~/.emacs.d/init.el"
	(setq user-emacs-directory (file-truename (file-name-directory load-file-name)))
#+end_src

Starting Emacs server.
#+begin_src emacs-lisp :tangle "~/.emacs.d/init.el"
	(require 'server)
	(unless (server-running-p)
		(server-start))
#+end_src

Loading configuration.
#+begin_src emacs-lisp :tangle "~/.emacs.d/init.el" :var config-file="~/.emacs.d/config.el"
	(load config-file)
#+end_src

* Configuration
** Backup files
Stopping Emacs from making backup files.
#+begin_src emacs-lisp
	(setq make-backup-files nil
				auto-save-default nil
				create-lockfiles nil)
#+end_src

** Indentation
Tab indentation with size of 2 is the most comfortable for me. :3
#+begin_src emacs-lisp
	(setq-default indent-tabs-mode t
								tab-width 2)
	(setq tab-always-indent 'complete)
#+end_src

Fix incorrect indentation in org-mode babel src blocks
#+begin_src emacs-lisp
	(setq org-src-tab-acts-natively t)
#+end_src

Making Emacs erase the tab instead of removing 1 space at a time.
#+begin_src emacs-lisp
	(setq backward-delete-char-untabify-method 'hungry)
#+end_src

Making electric-indent behave sanely.
#+begin_src emacs-lisp
	(setq-default electric-indent-inhibit t)
#+end_src

** Package manager
Requiring =package= package and adding =gnu=, =nongnu= and =melpa= repositories.
#+begin_src emacs-lisp
	(require 'package)
	(package-initialize)

	(setq package-archives '(("gnu"    . "https://elpa.gnu.org/packages/")
													 ("nongnu" . "https://elpa.nongnu.org/nongnu/")
													 ("melpa"  . "https://melpa.org/packages/")))
	(unless package-archive-contents
		(package-refresh-contents))
#+end_src

Installing =use-package= if needed and enabling it.
#+begin_src emacs-lisp
	(unless (package-installed-p 'use-package)
		(package-refresh-contents)
		(package-install 'use-package))
	(eval-when-compile
		(require 'use-package))
#+end_src

Always ensure and demand packages.
#+begin_src emacs-lisp
	(setq use-package-always-demand t
				use-package-always-ensure t)
#+end_src

** Appearance
*** UI
Using theme for Emacs.
#+begin_src emacs-lisp
	(use-package cyberpunk-theme
		:config (load-theme 'cyberpunk t))
#+end_src
*** org-mode
**** Bullets
Show bullets in org-mode.
#+begin_src emacs-lisp
	(use-package org-bullets
		:hook (org-mode . org-bullets-mode))
#+end_src
